services:
  db:
    image: postgres:16
    restart: always
    env_file: .env.docker
    environment:
      POSTGRES_HOST: db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: core/Dockerfile.prod
    command: >
      sh -c "./wait-for-db.sh db:5432 -- 
            python manage.py migrate && 
            gunicorn config.wsgi:application --bind 0.0.0.0:8000"      
    env_file: .env.docker
    volumes:
      - ./media:/app/media    
      - ./data/srtm_cache:/app/data/srtm_cache      
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"

  celeryworker:
    build:
      context: .
      dockerfile: core/Dockerfile.prod
    command: celery -A core worker -l info
    env_file: .env.docker
    volumes:
      - ./media:/app/media    
      - ./data/srtm_cache:/app/data/srtm_cache        
    depends_on:
      - db
      - redis
      - backend

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
      args:
        VITE_API_URL: "https://laserslicer.legradic.ch/api"     
    environment:
      - VITE_API_URL=https://laserslicer.legradic.ch/api
    ports:
      - "4173:4173"
    command: ["serve", "-s", "dist", "-l", "4173"]  

  caddy:
    image: caddy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/frontend/dist:ro    
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend
volumes:
  pgdata:
  caddy_data:
  caddy_config: